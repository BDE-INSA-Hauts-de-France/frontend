name: build
on:
  push:
    branches:
      - main
      - dev

permissions: write-all

env:
  IMAGE_NAME: frontend

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - id: owner
        uses: Entepotenz/change-string-case-action-min-dependencies@v1
        with:
          string: ${{ github.repository_owner }}

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Check if the push is to a tag, and if so, replace "main" with "latest"
          # This ensures that when a new release is tagged, it gets published as latest
          if [[ "$VERSION" == "main" ]]; then
            VERSION="latest";
          fi
          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "IMAGE_ID: $IMAGE_ID"
          echo "IMAGE_NAME: $IMAGE_NAME"

          echo ${{ secrets.ENV }} > .env
          echo ${{ secrets.ENV }} | sed -e "s/\\n/\n/g" > .env2
          base64 .env
          base64 .env2
          docker buildx build . --file Dockerfile -t $IMAGE_ID:$VERSION --push

      - name: Delete all containers from repository without tags
        uses: pcasteran/ghcr-cleaning-action@v1
        with:
          password: ${{ secrets.GITHUB_TOKEN }}
          package: ${{ env.IMAGE_NAME }}
          user: ${{ steps.owner.outputs.lowercase }}
